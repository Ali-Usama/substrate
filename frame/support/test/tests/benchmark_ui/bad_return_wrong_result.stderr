error[E0271]: type mismatch resolving `<Result<std::string::String, frame_benchmarking::BenchmarkError> as TypeEq>::This == Result<(), frame_benchmarking::BenchmarkError>`
  --> tests/benchmark_ui/bad_return_wrong_result.rs:10:16
   |
10 |     fn bench() -> Result<String, BenchmarkError> {
   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type mismatch resolving `<Result<std::string::String, frame_benchmarking::BenchmarkError> as TypeEq>::This == Result<(), frame_benchmarking::BenchmarkError>`
   |
note: expected this to be `Result<(), frame_benchmarking::BenchmarkError>`
  --> tests/benchmark_ui/bad_return_wrong_result.rs:5:1
   |
5  | #[benchmarks]
   | ^^^^^^^^^^^^^
   = note: expected enum `Result<(), _>`
              found enum `Result<std::string::String, _>`
note: required by a bound in `assert_type_eq_all`
  --> tests/benchmark_ui/bad_return_wrong_result.rs:5:1
   |
5  | #[benchmarks]
   | ^^^^^^^^^^^^^
   | |
   | required by a bound in this
   | required by this bound in `assert_type_eq_all`
   = note: this error originates in the macro `frame_benchmarking::v2::assert_type_eq_all` which comes from the expansion of the attribute macro `benchmarks` (in Nightly builds, run with -Z macro-backtrace for more info)
